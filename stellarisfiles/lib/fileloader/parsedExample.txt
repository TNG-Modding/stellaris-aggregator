Tree(start, 
    [Tree(define, [Token(VAR_STR, 'namespace'), Token(POSS_SYMB, '='), 
            Token(VAR_STR, 'galcom')]), 
    Tree(define, [Token(VAR_STR, 'event'), Token(POSS_SYMB, '='), 
            Tree(define, [Token(VAR_STR, 'id'), Token(POSS_SYMB, '='), 
                Token(DOT_STR, 'galcom.1')]), 
            Tree(define, [Token(VAR_STR, 'hide_window'), Token(POSS_SYMB, '='), 
                Token(MAGIC_VALUES, 'yes')]), 
            Tree(define, [Token(VAR_STR, 'is_triggered_only'), Token(POSS_SYMB, '='), 
                Token(MAGIC_VALUES, 'yes')]), 
            Tree(define, [Token(VAR_STR, 'trigger'), Token(POSS_SYMB, '='), 
                Tree(define, [Token(VAR_STR, 'NOR'), Token(POSS_SYMB, '='), 
                    Tree(define, [Token(VAR_STR, 'has_global_flag'), Token(POSS_SYMB, '='), 
                        Token(VAR_STR, 'galactic_community_founded')]), 
                    Tree(define, [Token(VAR_STR, 'has_global_flag'), Token(POSS_SYMB, '='), 
                        Token(VAR_STR, 'galcom_founding_begun')])]), 
                Tree(define, [Token(VAR_STR, 'count_country'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'limit'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'is_country_type'), Token(POSS_SYMB, '='), Token(VAR_STR, 'default')]), Tree(define, [Token(VAR_STR, 'is_homicidal'), Token(POSS_SYMB, '='), Token(MAGIC_VALUES, 'no')])]), Tree(define, [Token(VAR_STR, 'count'), Token(POSS_SYMB, '>='), Token(NUMBER, '3')])]), Tree(define, [Token(VAR_STR, 'any_playable_country'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'perc_communications_with_playable'), Token(POSS_SYMB, '>='), Token(NUMBER, '0.7')]), Tree(define, [Token(VAR_STR, 'is_homicidal'), Token(POSS_SYMB, '='), Token(MAGIC_VALUES, 'no')]), Tree(define, [Token(VAR_STR, 'is_gestalt'), Token(POSS_SYMB, '='), Token(MAGIC_VALUES, 'no')])])]), Tree(define, [Token(VAR_STR, 'immediate'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'set_global_flag'), Token(POSS_SYMB, '='), Token(VAR_STR, 'galcom_founding_begun')]), Tree(define, [Token(VAR_STR, 'random_playable_country'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'limit'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'perc_communications_with_playable'), Token(POSS_SYMB, '>='), Token(NUMBER, '0.7')]), Tree(define, [Token(VAR_STR, 'is_homicidal'), Token(POSS_SYMB, '='), Token(MAGIC_VALUES, 'no')]), Tree(define, [Token(VAR_STR, 'is_gestalt'), Token(POSS_SYMB, '='), Token(MAGIC_VALUES, 'no')])]), Tree(define, [Token(VAR_STR, 'country_event'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'id'), Token(POSS_SYMB, '='), Token(DOT_STR, 'galcom.2')])]), Tree(define, [Token(VAR_STR, 'every_playable_country'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'limit'), Token(POSS_SYMB, '='), Tree(define, [Token(LOGIC_WORDS, 'NOT'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'is_same_value'), Token(POSS_SYMB, '='), Token(VAR_STR, 'prev')])]), Tree(define, [Token(VAR_STR, 'has_communications'), Token(POSS_SYMB, '='), Token(VAR_STR, 'prev')]), Tree(define, [Token(VAR_STR, 'is_homicidal'), Token(POSS_SYMB, '='), Token(MAGIC_VALUES, 'no')])]), Tree(define, [Token(VAR_STR, 'country_event'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'id'), Token(POSS_SYMB, '='), Token(DOT_STR, 'galcom.2')])])])]), Tree(define, [Token(VAR_STR, 'random_country'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'limit'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'is_country_type'), Token(POSS_SYMB, '='), Token(VAR_STR, 'global_event')])]), Tree(define, [Token(VAR_STR, 'country_event'), Token(POSS_SYMB, '='), Tree(define, [Token(VAR_STR, 'id'), Token(POSS_SYMB, '='), Token(DOT_STR, 'galcom.3')]), Tree(define, [Token(VAR_STR, 'days'), Token(POSS_SYMB, '='), Token(NUMBER, '360')])])])])])])